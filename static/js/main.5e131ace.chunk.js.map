{"version":3,"sources":["services/Api.js","services/hackerNewsApi.js","store/story/actions.js","store/story/selector.js","styles/palette.js","utils/getSiteHostname.js","utils/getArticleLink.js","components/ListItem/styles.js","components/ListItem/index.js","components/List/styles.js","components/List/index.js","components/Loader/styles.js","components/Loader/index.js","components/App/styles.js","styles/mediaQueries.js","components/App/App.js","components/App/index.js","store/app/actions.js","store/app/reducer.js","store/story/reducer.js","store/reducer.js","store/middleware.js","store/index.js","styles/globals.js","serviceWorker.js","index.js"],"names":["API_ROOT","process","URL","TIMEOUT","HEADERS","Accept","client","baseURL","timeout","headers","auth","axios","create","interceptors","response","use","this","handleSuccess","handleError","error","Promise","reject","path","get","then","data","payload","put","post","patch","delete","hackerNewsApi","getTopStoryIds","getStory","id","getStoriesByPage","ids","page","limit","begin","end","getPageSlice","storyPromises","items","slice","getPageValues","map","all","NS","actionTypes","FETCH_STORY_IDS_REQUEST","FETCH_STORY_IDS_SUCCESS","FETCH_STORY_IDS_FAILURE","FETCH_STORIES_REQUEST","FETCH_STORIES_SUCCESS","FETCH_STORIES_FAILURE","action","type","actions","fetchStoryIds","dispatch","storyIds","fetchStories","catch","err","stories","hasMoreStoriesSelector","createSelector","state","story","length","colorsDark","background","backgroundSecondary","text","textSecondary","border","getSiteHostname","siteUrl","hostname","includes","url","parse","split","HN_ROOT","HN_ITEM","HN_USER","getArticleLink","commentUrl","Item","styled","li","theme","Title","h3","Host","span","ExternalLink","a","Description","div","CommentLink","LINK_REL","ListItem","by","kids","score","title","time","site","link","userUrl","href","rel","target","format","Date","toISOString","ListWrapper","ul","props","List","key","blink","keyframes","Animation","Loader","Wrapper","h1","App","isFetching","fetchStoriesFirstPage","hasMoreStories","dataLength","next","hasMore","loader","style","height","overflow","Component","connect","SET_THEME","app","rootReducer","combineReducers","middlewareList","push","thunk","middleware","compose","applyMiddleware","configureStore","initialState","createStore","reducer","GlobalStyles","createGlobalStyle","Boolean","window","location","match","store","ReactDOM","render","document","getElementById","renderApp","navigator","serviceWorker","ready","registration","unregister"],"mappings":"wPAEMA,EAAUC,iEAAYC,KAAO,wBAC7BC,EAAU,IACVC,EAAU,CACd,eAAgB,mBAChBC,OAAQ,oBCHJC,EAAS,I,WDOb,cAAgF,IAAD,IAAjEC,eAAiE,MAAvDP,EAAuD,MAA7CQ,eAA6C,MAAnCL,EAAmC,MAA1BM,eAA0B,MAAhBL,EAAgB,EAAPM,EAAO,EAAPA,KAAO,oBAC7E,IAAMJ,EAASK,IAAMC,OAAO,CAC1BL,UACAC,UACAC,UACAC,SAGFJ,EAAOO,aAAaC,SAASC,IAAIC,KAAKC,cAAeD,KAAKE,aAC1DF,KAAKV,OAASA,E,0DAGFQ,GACZ,OAAOA,I,kCAGGK,GACV,OAAOC,QAAQC,OAAOF,K,0BAGpBG,GACF,OAAON,KAAKV,OAAOiB,IAAID,GAAME,KAAK,SAAAV,GAAQ,OAAIA,EAASW,S,0BAGrDH,EAAMI,GACR,OAAOV,KAAKV,OAAOqB,IAAIL,EAAMI,GAASF,KAAK,SAAAV,GAAQ,OAAIA,EAASW,S,2BAG7DH,EAAMI,GACT,OAAOV,KAAKV,OAAOsB,KAAKN,EAAMI,GAASF,KAAK,SAAAV,GAAQ,OAAIA,EAASW,S,4BAG7DH,EAAMI,GACV,OAAOV,KAAKV,OAAOuB,MAAMP,EAAMI,GAASF,KAAK,SAAAV,GAAQ,OAAIA,EAASW,S,6BAG7DH,GACL,OAAON,KAAKV,OAAOwB,OAAOR,GAAME,KAAK,SAAAV,GAAQ,OAAIA,EAASW,W,KC5C/C,CAAe,CAAElB,QADf,0CAKXwB,EAAgB,GAKtBA,EAAcC,eAAiB,kBAAM1B,EAAOiB,IAAP,qBARlB,wBASnBQ,EAAcE,SAAW,SAAAC,GAAE,OAAI5B,EAAOiB,IAAP,gBAAoBW,GAApB,OATZ,wBAUnBH,EAAcI,iBAAmB,SAACC,EAAKC,GAAU,IAAD,EAL3B,SAACC,GAAD,IAAQD,EAAR,uDAAe,EAAf,MAAsB,CAAEE,MAAOF,EAAOC,EAAOE,KAAMH,EAAO,GAAKC,GAM3DG,CATN,GAS+BJ,GAE1CK,EAPc,SAAC,GAAD,IAAGH,EAAH,EAAGA,MAAOC,EAAV,EAAUA,IAAV,SAAeG,MAAkBC,MAAML,EAAOC,GAMhDK,CAAc,CAAEN,MAFY,EACtCA,MACiCC,IAFK,EAC/BA,IAC+BG,MAAOP,IACrBU,IAAI,SAAAZ,GAAE,OAAIH,EAAcE,SAASC,KACjE,OAAOd,QAAQ2B,IAAIL,IAGNX,QCnBTiB,EAAK,iBAEEC,EAAc,CACzBC,wBAAwB,GAAD,OAAKF,EAAL,4BACvBG,wBAAwB,GAAD,OAAKH,EAAL,4BACvBI,wBAAwB,GAAD,OAAKJ,EAAL,4BACvBK,sBAAsB,GAAD,OAAKL,EAAL,0BACrBM,sBAAsB,GAAD,OAAKN,EAAL,0BACrBO,sBAAsB,GAAD,OAAKP,EAAL,2BAGjBQ,EAAS,SAACC,EAAM/B,GAAP,MAAoB,CAAE+B,OAAM/B,YAErCgC,EAAU,CACdC,cAAe,WAAoB,IAAnBjC,EAAkB,uDAAR,GACxB,OAAO,SAAAkC,GAGL,OAFAA,EAASJ,EAAOP,EAAYC,wBAAyBxB,IAE9CK,EAAcC,iBAClBR,KAAK,SAAAqC,GAGJ,OAFAD,EAASJ,EAAOP,EAAYE,wBAAyB,CAAEU,cACvDD,EAASF,EAAQI,aAAa,CAAED,WAAUxB,KAAM,KACzCwB,IAERE,MAAO,SAAAC,GAAG,OAAIJ,EAASJ,EAAOP,EAAYG,wBAAyBY,QAG1EF,aAAc,WAAmB,IAAlBpC,EAAiB,uDAAP,GACvB,OAAO,SAAAkC,GACLA,EAASJ,EAAOP,EAAYI,sBAAuB3B,IADlC,IAETmC,EAAmBnC,EAAnBmC,SAAUxB,EAASX,EAATW,KAElB,OAAON,EAAcI,iBAAiB0B,EAAUxB,GAC7Cb,KAAK,SAAAyC,GACJL,EAASJ,EAAOP,EAAYK,sBAAuB,CAAEW,eAEtDF,MAAM,SAAAC,GAAG,OAAIJ,EAASJ,EAAOP,EAAYM,sBAAuBS,SAK1DN,I,QCtCFQ,EAAyBC,YAHb,SAAAC,GAAK,OAAIA,EAAMC,MAAMR,UACtB,SAAAO,GAAK,OAAIA,EAAMC,MAAMJ,SAK3C,SAACJ,EAAUI,GAAX,OAAuBJ,EAASS,OAASL,EAAQK,S,gDCRtCC,EAAa,CACtBC,WAAY,UACZC,oBAAqB,UACrBC,KAAM,UACNC,cAAe,UACfC,OAAQ,W,yBCeGC,EAlBS,SAAAC,GACtB,IAAIC,EAAW,GAcf,OAZID,IACGA,EAAQE,SAAS,QACpBF,EAAO,kBAAcA,IAGvBC,EAAWE,IAAIC,MAAMJ,GAASC,UAG5BA,EAASC,SAAS,UACpBD,EAAWA,EAASI,MAAM,QAAQ,IAG7BJ,GCjBHK,EAAU,+BACHC,EAAO,UAAMD,EAAN,aACPE,EAAO,UAAMF,EAAN,aASLG,EAPQ,SAAC,GAAiB,IAAfN,EAAc,EAAdA,IAAK/C,EAAS,EAATA,GACvBsD,EAAU,UAAMH,GAAN,OAAgBnD,GAGhC,OAFe+C,GAAWO,G,m4BCJrB,IAAMC,EAAOC,IAAOC,GAAV,IACY,qBAAGC,MAAkBhB,SAOrCiB,EAAQH,IAAOI,GAAV,IACP,qBAAGF,MAAkBlB,OAOnBqB,EAAOL,IAAOM,KAAV,IACN,qBAAGJ,MAAkBjB,gBAInBsB,EAAeP,IAAOQ,EAAV,IACd,qBAAGN,MAAkBjB,gBASnBwB,EAAcT,IAAOU,IAAV,IAEb,qBAAGR,MAAkBjB,gBAGnB0B,EAAcX,IAAOQ,EAAV,IACb,qBAAGN,MAAkBjB,eAEnB,qBAAGiB,MAAkBjB,gBClC5B2B,EAAW,+BA+BFC,GA7BE,SAAC,GAA0D,IAAxDC,EAAuD,EAAvDA,GAAuD,IAAnDC,YAAmD,MAA5C,GAA4C,EAAxCC,EAAwC,EAAxCA,MAAOzB,EAAiC,EAAjCA,IAAK0B,EAA4B,EAA5BA,MAAOzE,EAAqB,EAArBA,GAAU0E,GAAW,EAAjBnD,KAAiB,EAAXmD,MACxDC,EAAOhC,EAAgBI,IAAQ,uBAC/B6B,EAAOvB,EAAe,CAAEN,MAAK/C,OAC7BsD,EAAU,UAAMH,GAAN,OAAgBnD,GAC1B6E,EAAO,UAAMzB,GAAN,OAAgBkB,GAE7B,OACE,kBAACf,EAAD,KACE,kBAACQ,EAAD,CAAce,KAAMF,EAAMG,IAAKX,EAAUY,OAAO,UAC9C,kBAACrB,EAAD,KACGc,EADH,IACU,kBAACZ,EAAD,SAAQc,EAAR,OAGZ,kBAACV,EAAD,KACGO,EADH,cACqB,IACnB,kBAACL,EAAD,CAAaW,KAAMD,EAASE,IAAKX,EAAUY,OAAO,UAC/CV,GAEF,MACAW,iBAAO,IAAIC,KAAY,IAAPR,GAAaS,eAC7B,MACD,kBAAChB,EAAD,CAAaW,KAAMxB,EAAYyB,IAAKX,EAAUY,OAAO,UAClDT,EAAKnC,OADR,gB,4OC5BD,IAAMgD,GAAc5B,IAAO6B,GAAV,KACF,SAAAC,GAAK,OAAIA,EAAM5B,MAAMnB,sBCQ5BgD,GANF,SAAC,GAAD,IAAGxD,EAAH,EAAGA,QAAH,OACX,kBAACqD,GAAD,KACGrD,EAAQnB,IAAI,SAAAuB,GAAK,OAAI,kBAAC,GAAD,iBAAcA,EAAd,CAAqBqD,IAAKrD,EAAMnC,U,upBCL1D,IAAMyF,GAAQC,YAAH,MAaEC,GAAYnC,IAAOU,IAAV,KAIT,qBAAGR,MAAkBjB,eAMZgD,ICbPG,GARA,kBACb,kBAACD,GAAD,KACE,mCACA,mCACA,qC,mZCLG,IAAME,GAAUrC,IAAOU,IAAV,KCFE,6CDeTP,GAAQH,IAAOsC,GAAV,KACP,SAAAR,GAAK,OAAIA,EAAM5B,MAAMjB,gBEgCjBsD,G,2MAnCbnE,aAAe,WAAO,IAAD,EACkC,EAAK0D,MAAlD3D,EADW,EACXA,SAAUxB,EADC,EACDA,KAAMyB,EADL,EACKA,aADL,EACmBoE,YAGpCpE,EAAa,CAAED,WAAUxB,U,mFAP3BrB,KAAKwG,MAAMW,0B,+BAWH,IAAD,EAC6BnH,KAAKwG,MAAjCvD,EADD,EACCA,QAASmE,EADV,EACUA,eAEjB,OACE,kBAAC,IAAD,CAAexC,MAAOrB,GACpB,6BACE,kBAACwD,GAAD,KACE,kBAAC,GAAD,2BACA,kBAAC,IAAD,CACEM,WAAYpE,EAAQK,OACpBgE,KAAMtH,KAAK8C,aACXyE,QAASH,EACTI,OAAQ,kBAAC,GAAD,MACRC,MAAO,CACLC,OAAQ,OACRC,SAAU,YAGZ,kBAAC,GAAD,CAAM1E,QAASA,Y,GA/BX2E,aCSHC,eAbS,SAAAzE,GAAK,MAAK,CAChCH,QAASG,EAAMC,MAAMJ,QACrB5B,KAAM+B,EAAMC,MAAMhC,KAClBwB,SAAUO,EAAMC,MAAMR,SACtBqE,WAAY9D,EAAMC,MAAM6D,WACxBE,eAAgBlE,EAAuBE,KAGd,SAAAR,GAAQ,MAAK,CACtCuE,sBAAuB,kBAAMvE,EAASF,EAAQC,kBAC9CG,aAAc,gBAAGD,EAAH,EAAGA,SAAUxB,EAAb,EAAaA,KAAb,OAAwBuB,EAASF,EAAQI,aAAa,CAAED,WAAUxB,aAGnEwG,CAA6CZ,I,iBChB/ChF,GAAc,CACzB6F,UAAU,GAAD,OAHA,eAGA,e,wjBCDX,IAgBeC,GAZH,WAAmD,IAAlD3E,EAAiD,uDAJ/B,CAC3BwB,MAAO,QAGmD,yCAApBnC,EAAoB,EAApBA,KAAM/B,EAAc,EAAdA,QAC9C,OAAO+B,GACL,KAAKR,GAAY6F,UACf,OAAO,GAAP,GACK1E,EADL,GAEK1C,GAEP,QACE,OAAO0C,I,ikBCZb,IAkCeC,GA1BD,WAAmD,IAAlDD,EAAiD,uDARjC,CAC7BP,SAAU,GACVI,QAAS,GACT5B,KAAM,EACN6F,YAAY,EACZ/G,MAAO,IAGuD,yCAApBsC,EAAoB,EAApBA,KAAM/B,EAAc,EAAdA,QAChD,OAAO+B,GACL,KAAKR,EAAYC,wBACjB,KAAKD,EAAYI,sBACf,OAAO,MACFe,EADL,CAEE8D,YAAY,IAEhB,KAAKjF,EAAYE,wBACf,OAAO,MACFiB,EADL,GAEK1C,GAEP,KAAKuB,EAAYK,sBACf,OAAO,MACFc,EADL,CAEEH,QAAQ,GAAD,oBAAMG,EAAMH,SAAZ,aAAwBvC,EAAQuC,UACvC5B,KAAM+B,EAAM/B,KAAO,EACnB6F,YAAY,IAEhB,QACE,OAAO9D,ICtBE4E,GALKC,aAAgB,CAChCF,OACA1E,W,SCDE6E,I,MAAiB,IAEvBA,GAAeC,KAAKC,MAMpB,IAEeC,GAFIC,aAAQC,KAAe,WAAf,EAAmBL,KCJ/BM,GALQ,SAAAC,GAErB,OADcC,aAAYC,GAASF,EAAcJ,K,ogBCDnD,IAyBeO,GAzBMC,YAAH,KAWQtF,EAAWC,YCHjBsF,QACW,cAA7BC,OAAOC,SAASjF,UAEe,UAA7BgF,OAAOC,SAASjF,UAEhBgF,OAAOC,SAASjF,SAASkF,MACvB,4DCVY,WAChB,IACMC,EAAQV,GADO,IAGrBU,EAAMtG,SAAS,CAAEH,KAAM,oBAEvB0G,IAASC,OACT,kBAAC,IAAD,CAAUF,MAAOA,GACf,kBAAC,GAAD,MADF,IAEE,kBAAC,GAAD,OAEFG,SAASC,eAAe,SAG1BC,GD2GM,kBAAmBC,WACrBA,UAAUC,cAAcC,MAAMlJ,KAAK,SAAAmJ,GACjCA,EAAaC,iB","file":"static/js/main.5e131ace.chunk.js","sourcesContent":["import axios from 'axios';\n\nconst API_ROOT =process.env.URL || 'http://localhost:3000';\nconst TIMEOUT = 20000;\nconst HEADERS = {\n  'Content-Type': 'application/json',\n  Accept: 'application/json'\n};\n\nclass ApiService {\n  constructor({ baseURL = API_ROOT, timeout = TIMEOUT, headers = HEADERS, auth}) {\n    const client = axios.create({\n      baseURL,\n      timeout,\n      headers,\n      auth,\n    });\n\n    client.interceptors.response.use(this.handleSuccess, this.handleError);\n    this.client = client;\n  }\n\n  handleSuccess(response){\n    return response;\n  }\n\n  handleError(error) {\n    return Promise.reject(error);\n  }\n\n  get(path) {\n    return this.client.get(path).then(response => response.data);\n  }\n\n  put(path, payload) {\n    return this.client.put(path, payload).then(response => response.data);\n  }\n\n  post(path, payload) {\n    return this.client.post(path, payload).then(response => response.data);\n  }\n\n  patch(path, payload) {\n    return this.client.patch(path, payload).then(response => response.data);\n  }\n\n  delete(path) {\n    return this.client.delete(path).then(response => response.data);\n  }\n}\n\nexport default ApiService;\n","import ApiService from './Api';\n\nconst BASE_URL = 'https://hacker-news.firebaseio.com/v0';\nconst client = new ApiService({ baseURL: BASE_URL });\nconst JSON_QUERY = '.json?print=pretty';\n\nconst PAGE_LIMIT = 20;\nconst hackerNewsApi = {};\n\nconst getPageSlice = (limit, page = 0) => ({ begin: page * limit, end: (page + 1) * limit});\nconst getPageValues = ({ begin, end, items }) => items.slice(begin, end);\n\nhackerNewsApi.getTopStoryIds = () => client.get(`/topstories${JSON_QUERY}`);\nhackerNewsApi.getStory = id => client.get(`/item/${id}${JSON_QUERY}`);\nhackerNewsApi.getStoriesByPage = (ids, page) => {\n  const { begin, end } = getPageSlice(PAGE_LIMIT, page);\n  const activeIds = getPageValues({ begin, end, items: ids})\n  const storyPromises = activeIds.map(id => hackerNewsApi.getStory(id));\n  return Promise.all(storyPromises);\n};\n\nexport default hackerNewsApi;\n","import hackerNewsApi from 'services/hackerNewsApi';\n\nconst NS = '@hnClone/story';\n\nexport const actionTypes = {\n  FETCH_STORY_IDS_REQUEST: `${NS}/FETCH_STORY_IDS_REQUEST`,\n  FETCH_STORY_IDS_SUCCESS: `${NS}/FETCH_STORY_IDS_SUCCESS`,\n  FETCH_STORY_IDS_FAILURE: `${NS}/FETCH_STORY_IDS_FAILURE`,\n  FETCH_STORIES_REQUEST: `${NS}/FETCH_STORIES_REQUEST`,\n  FETCH_STORIES_SUCCESS: `${NS}/FETCH_STORIES_SUCCESS`,\n  FETCH_STORIES_FAILURE: `${NS}/FETCH_STORIES_FAILURE`,\n};\n\nconst action = (type, payload) => ({ type, payload});\n\nconst actions = {\n  fetchStoryIds: (payload = {} ) => {\n    return dispatch => {\n      dispatch(action(actionTypes.FETCH_STORY_IDS_REQUEST, payload));\n\n      return hackerNewsApi.getTopStoryIds()\n        .then(storyIds => {\n          dispatch(action(actionTypes.FETCH_STORY_IDS_SUCCESS, { storyIds }));\n          dispatch(actions.fetchStories({ storyIds, page: 0}));\n          return storyIds;\n        })\n        .catch( err => dispatch(action(actionTypes.FETCH_STORY_IDS_FAILURE, err)))\n    };\n  },\n  fetchStories: (payload = {}) => {\n    return dispatch => {\n      dispatch(action(actionTypes.FETCH_STORIES_REQUEST, payload));\n      const { storyIds, page } = payload;\n\n      return hackerNewsApi.getStoriesByPage(storyIds, page)\n        .then(stories => {\n          dispatch(action(actionTypes.FETCH_STORIES_SUCCESS, { stories }));\n        })\n        .catch(err => dispatch(action(actionTypes.FETCH_STORIES_FAILURE, err)))\n    };\n  }\n};\n\nexport default actions;\n","import { createSelector } from 'reselect';\n\nconst storyIdsSelector = state => state.story.storyIds;\nconst storiesSelector = state => state.story.stories;\n\nexport const hasMoreStoriesSelector = createSelector(\n  storyIdsSelector,\n  storiesSelector,\n  (storyIds, stories) => storyIds.length > stories.length,\n);\n","export const colorsDark = {\n    background: '#2d2d2d',\n    backgroundSecondary: '#393C3E',\n    text: '#bfbebe',\n    textSecondary: '#848886',\n    border: '#272727'\n};\n\nexport const colorsLight = {\n    background: '#EAEAEA',\n    backgroundSecondary: '#F8F8F8',\n    text: '#848886',\n    textSecondary: '#aaaaaa',\n    border: '#EAEAEA'\n};\n","import url from 'url';\n\nconst getSiteHostname = siteUrl => {\n  let hostname = '';\n\n  if (siteUrl) {\n    if (!siteUrl.includes('//')) {\n      siteUrl = `https://${siteUrl}`;\n    }\n\n    hostname = url.parse(siteUrl).hostname;\n  }\n\n  if (hostname.includes('www.')) {\n    hostname = hostname.split('www.')[1];\n  }\n\n  return hostname;\n};\n\nexport default getSiteHostname;\n","const HN_ROOT = 'https://news.ycombinator.com';\nexport const HN_ITEM = `${HN_ROOT}/item?id=`;\nexport const HN_USER = `${HN_ROOT}/user?id=`;\n\nconst getArticleLink = ({ url, id }) => {\n  const commentUrl = `${HN_ITEM}${id}`;\n  const link = !!url ? url: commentUrl;\n\n  return link;\n};\n\nexport default getArticleLink;\n","import styled from 'styled-components';\n\nexport const Item = styled.li`\n  border-bottom: 1px solid ${({ theme }) => theme.border};\n  padding: 14px 24px;\n  &:last-child {\n    border-bottom: none;\n  }\n`;\n\nexport const Title = styled.h3`\n  color: ${({ theme }) => theme.text};\n  margin-top: 0;\n  margin-bottom: 6px;\n  font-weight: 400;\n  font-size: 16px;\n`;\n\nexport const Host = styled.span`\n  color: ${({ theme }) => theme.textSecondary};\n  font-size: 12px;\n  `;\n\nexport const ExternalLink = styled.a`\n  color: ${({ theme }) => theme.textSecondary};\n  display: flex;\n  width: 100%;\n  height: 100%;\n  flex-direction: row;\n  align-items: center;\n  text-decoration: none;\n`;\n\nexport const Description = styled.div`\n  fomt-size: 14px;\n  color: ${({ theme }) => theme.textSecondary};\n`;\n\nexport const CommentLink = styled.a`\n  color: ${({ theme }) => theme.textSecondary};\n  &:visited {\n    color: ${({ theme }) => theme.textSecondary};\n  }\n`;\n","import React from 'react';\nimport { format } from 'timeago.js';\nimport getSiteHostname from 'utils/getSiteHostname';\nimport getArticleLink, { HN_USER, HN_ITEM } from 'utils/getArticleLink';\n\nimport { Item, Title, Host, ExternalLink, Description, CommentLink } from './styles';\n\nconst LINK_REL = 'noopener noreferrer nofollow';\n\nconst ListItem = ({ by, kids = [], score, url, title, id, type, time }) => {\n  const site = getSiteHostname(url) || 'news.ycombinator.com';\n  const link = getArticleLink({ url, id });\n  const commentUrl = `${HN_ITEM}${id}`;\n  const userUrl = `${HN_USER}${by}`;\n\n  return (\n    <Item>\n      <ExternalLink href={link} rel={LINK_REL} target=\"_blank\">\n        <Title>\n          {title} <Host>({site})</Host>\n        </Title>\n      </ExternalLink>\n      <Description>\n        {score} points by {' '}\n        <CommentLink href={userUrl} rel={LINK_REL} target=\"_blank\">\n          {by}\n        </CommentLink>\n        {' | '}\n        {format(new Date(time * 1000).toISOString())}\n        {' | '}\n        <CommentLink href={commentUrl} rel={LINK_REL} target=\"_blank\">\n          {kids.length} Comments\n        </CommentLink>\n      </Description>\n    </Item>\n  )\n}\n\nexport default ListItem;\n","import styled from 'styled-components';\n\nexport const ListWrapper = styled.ul`\n  background-color: ${props => props.theme.backgroundSecondary};\n  border-radius: 4px;\n  margin-left: auto;\n  margin-right: auto;\n  margin-botton: 20px;\n  display: flex;\n  flex-direction: column;\n`;\n","import React from 'react';\nimport ListItem from 'components/ListItem';\n\nimport { ListWrapper } from './styles';\n\nconst List = ({ stories }) => (\n  <ListWrapper>\n    {stories.map(story => <ListItem {...story} key={story.id} />)}\n  </ListWrapper>\n)\n\nexport default List;\n","import styled, { keyframes } from 'styled-components';\n\nconst blink = keyframes`\n  0% {\n    opacity: .2;\n  }\n\n  20% {\n    opacity: 1;\n  }\n\n  100% {\n    opacity: .2;\n  }\n`;\nexport const Animation = styled.div`\n  text-align: center;\n\n  span {\n    color: ${({ theme }) => theme.textSecondary};\n    display: inline-block;\n    margin-left: 4px;\n    margin-right: 4px;\n    font-size: 80px;\n    line-height: 0.1;\n    animation-name: ${blink};\n    animation-duration: 1s;\n    animation-iteration-count: infinite;\n    animation-fill-mode: both;\n  }\n  span:nth-child(2) {\n    animation-delay: .2s;\n  }\n\n  span:nth-child(3) {\n    animation:delay: .4s;\n  }\n`;\n","import React from 'react';\n\nimport { Animation } from './styles';\n\nconst Loader = () => (\n  <Animation>\n    <span>.</span>\n    <span>.</span>\n    <span>.</span>\n  </Animation>\n);\n\nexport default Loader;\n","import styled from 'styled-components';\nimport { tablet } from 'styles/mediaQueries';\n\nexport const Wrapper = styled.div`\n  width: 85%;\n  margin-left: auto;\n  margin-right: auto;\n  height: 100%;\n  overflow: hidden;\n  padding-bottom: 200px;\n\n  ${tablet} {\n    width: 96%\n  }\n`;\n\nexport const Title = styled.h1`\n  color: ${props => props.theme.textSecondary};\n  font-size: 20px;\n  font-weight: 300;\n  margin-top: 24px;\n  margin-bottom: 26px;\n`;\n","export const mobile = '@media only screen and (max-width: 480px)';\nexport const tablet = '@media only screen and (max-width: 768px)';\n","import React, { Component } from 'react';\nimport InfiniteScroll from 'react-infinite-scroll-component';\nimport { ThemeProvider } from 'styled-components';\nimport { colorsDark } from 'styles/palette';\nimport List from 'components/List';\nimport Loader from 'components/Loader';\n\nimport { Wrapper, Title, } from './styles';\n\nclass App extends Component {\n  componentDidMount() {\n    this.props.fetchStoriesFirstPage();\n  }\n\n  fetchStories = () => {\n    const { storyIds, page, fetchStories, isFetching } = this.props;\n\n    if (!isFetching) {\n      fetchStories({ storyIds, page });\n    }\n  }\n\n  render() {\n    const { stories, hasMoreStories } = this.props;\n\n    return (\n      <ThemeProvider theme={colorsDark}>\n        <div>\n          <Wrapper>\n            <Title>Hacker News Reader</Title>\n            <InfiniteScroll\n              dataLength={stories.length}\n              next={this.fetchStories}\n              hasMore={hasMoreStories}\n              loader={<Loader />}\n              style={{\n                height: '100%',\n                overflow: 'visible'\n              }}\n            >\n              <List stories={stories} />\n            </InfiniteScroll>\n          </Wrapper>\n        </div>\n      </ThemeProvider>\n    );\n  }\n}\n\nexport default App;\n","import { connect } from 'react-redux';\nimport actions from 'store/story/actions';\nimport { hasMoreStoriesSelector } from 'store/story/selector';\nimport App from './App';\n\nconst mapStateToProps = state => ({\n  stories: state.story.stories,\n  page: state.story.page,\n  storyIds: state.story.storyIds,\n  isFetching: state.story.isFetching,\n  hasMoreStories: hasMoreStoriesSelector(state),\n});\n\nconst mapDispatchToProps = dispatch => ({\n  fetchStoriesFirstPage: () => dispatch(actions.fetchStoryIds()),\n  fetchStories: ({ storyIds, page }) => dispatch(actions.fetchStories({ storyIds, page })),\n});\n\nexport default connect(mapStateToProps, mapDispatchToProps)(App);\n","const NS = '@hnCline/app';\n\nexport const actionTypes = {\n  SET_THEME: `${NS}/SET_THEME`,\n};\n\nconst actions = {\n  setTheme: (payload = {}) => ({ type: actionTypes.SET_THEME, payload }),\n};\n\nexport default actions;\n","import { actionTypes } from './actions';\n\nconst getInitialState = () => ({\n    theme: 'dark',\n});\n\nconst app = (state = getInitialState(), { type, payload }) => {\n  switch(type) {\n    case actionTypes.SET_THEME:\n      return {\n        ...state,\n        ...payload, // { theme: <VALUE> }\n      }\n    default:\n      return state;\n  }\n};\n\nexport default app;\n","import { actionTypes } from './actions';\n\nconst getInitialState = () => ({\n  storyIds: [],\n  stories: [],\n  page: 0,\n  isFetching: false,\n  error: '',\n});\n\nconst story = (state = getInitialState(), { type, payload }) => {\n  switch(type) {\n    case actionTypes.FETCH_STORY_IDS_REQUEST:\n    case actionTypes.FETCH_STORIES_REQUEST:\n      return {\n        ...state,\n        isFetching: true,\n      };\n    case actionTypes.FETCH_STORY_IDS_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n      };\n    case actionTypes.FETCH_STORIES_SUCCESS:\n      return {\n        ...state,\n        stories: [...state.stories, ...payload.stories],\n        page: state.page + 1,\n        isFetching: false,\n      };\n    default:\n      return state;\n\n  }\n};\n\nexport default story;\n","import { combineReducers } from 'redux';\nimport app from './app/reducer';\nimport story from './story/reducer';\n\nconst rootReducer = combineReducers({\n    app,\n    story,\n});\n\nexport default rootReducer;\n","import { applyMiddleware, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport { createLogger } from 'redux-logger';\n\nconst isProd = process.env.NODE_ENV === 'production';\nconst middlewareList = [];\n\nmiddlewareList.push(thunk);\n\nif (!isProd) {\n  middlewareList.push(createLogger());\n}\n\nconst middleware = compose(applyMiddleware(...middlewareList));\n\nexport default middleware;\n","import { createStore } from 'redux';\nimport reducer from './reducer';\nimport middleware from './middleware';\n\nconst configureStore = initialState => {\n  const store = createStore(reducer, initialState, middleware);\n  return store;\n};\n\nexport default configureStore;\n","import { createGlobalStyle } from 'styled-components';\nimport { colorsDark } from './palette';\n\n\nconst GlobalStyles = createGlobalStyle`\n    * {\n      box-sizing: border-box;\n    }\n    html, body {\n      font-family: lato,Helvetica-Neue,Helvetica,Arial,sans-serif;\n      width: 100vw;\n      overflow-x: hidden,\n      margin: 0;\n      padding: 0;\n      min-height: 100vh;\n      background-color: ${colorsDark.background};\n    }\n    ul {\n      list-style: none;\n      padding: 0;\n    }\n    a {\n      text-decoration: none;\n      &:visited {\n        color: inherit;\n      }\n    }\n  `\n\nexport default GlobalStyles;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from 'components/App';\nimport { Provider } from 'react-redux';\nimport configureStore from 'store';\nimport GlobalStyles from 'styles/globals'\nimport * as serviceWorker from './serviceWorker';\n\nconst renderApp = () => {\n  const initialState = {};\n  const store = configureStore(initialState);\n\n  store.dispatch({ type: '@hnClone/@@INIT' })\n\n  ReactDOM.render(\n  <Provider store={store}>\n    <GlobalStyles />,\n    <App />\n  </Provider>,\n  document.getElementById('root'));\n}\n\nrenderApp();\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}